(function() {var implementors = {};
implementors["alloc"] = [{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a>, '_&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"enum\" href=\"alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, T&gt;","synthetic":false,"types":["alloc::borrow::Cow"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"alloc/rc/struct.Rc.html\" title=\"struct alloc::rc::Rc\">Rc</a>&lt;T&gt;","synthetic":false,"types":["alloc::rc::Rc"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;str&gt; for <a class=\"struct\" href=\"alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>","synthetic":false,"types":["alloc::string::String"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[u8]&gt; for <a class=\"struct\" href=\"alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>","synthetic":false,"types":["alloc::string::String"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;","synthetic":false,"types":["alloc::sync::Arc"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;","synthetic":false,"types":["alloc::vec::Vec"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T]&gt; for <a class=\"struct\" href=\"alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;","synthetic":false,"types":["alloc::vec::Vec"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T]&gt; for <a class=\"struct\" href=\"alloc/vec/struct.IntoIter.html\" title=\"struct alloc::vec::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":false,"types":["alloc::vec::IntoIter"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T]&gt; for <a class=\"struct\" href=\"alloc/vec/struct.Drain.html\" title=\"struct alloc::vec::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":false,"types":["alloc::vec::Drain"]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"arrayvec/struct.ArrayString.html\" title=\"struct arrayvec::ArrayString\">ArrayString</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,&nbsp;</span>","synthetic":false,"types":["arrayvec::array_string::ArrayString"]},{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a>&lt;A as <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&gt;::<a class=\"type\" href=\"arrayvec/array/trait.Array.html#associatedtype.Item\" title=\"type arrayvec::array::Array::Item\">Item</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"arrayvec/struct.ArrayVec.html\" title=\"struct arrayvec::ArrayVec\">ArrayVec</a>&lt;A&gt;","synthetic":false,"types":["arrayvec::ArrayVec"]}];
implementors["bytes"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>","synthetic":false,"types":["bytes::bytes::Bytes"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>","synthetic":false,"types":["bytes::bytes::BytesMut"]}];
implementors["core"] = [];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"crossbeam_epoch/atomic/trait.Pointable.html\" title=\"trait crossbeam_epoch::atomic::Pointable\">Pointable</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;","synthetic":false,"types":["crossbeam_epoch::atomic::Owned"]}];
implementors["cssparser"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"cssparser/struct.CowRcStr.html\" title=\"struct cssparser::CowRcStr\">CowRcStr</a>&lt;'a&gt;","synthetic":false,"types":["cssparser::cow_rc_str::CowRcStr"]}];
implementors["darling_core"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>&gt; for <a class=\"struct\" href=\"darling_core/util/struct.IdentString.html\" title=\"struct darling_core::util::IdentString\">IdentString</a>","synthetic":false,"types":["darling_core::util::ident_string::IdentString"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"darling_core/util/struct.IdentString.html\" title=\"struct darling_core::util::IdentString\">IdentString</a>","synthetic":false,"types":["darling_core::util::ident_string::IdentString"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"darling_core/util/struct.SpannedValue.html\" title=\"struct darling_core::util::SpannedValue\">SpannedValue</a>&lt;T&gt;","synthetic":false,"types":["darling_core::util::spanned_value::SpannedValue"]}];
implementors["dbus"] = [{"text":"impl&lt;'m&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/c_str/struct.CStr.html\" title=\"struct std::ffi::c_str::CStr\">CStr</a>&gt; for <a class=\"struct\" href=\"dbus/struct.Signature.html\" title=\"struct dbus::Signature\">Signature</a>&lt;'m&gt;","synthetic":false,"types":["dbus::strings::Signature"]},{"text":"impl&lt;'m&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/c_str/struct.CStr.html\" title=\"struct std::ffi::c_str::CStr\">CStr</a>&gt; for <a class=\"struct\" href=\"dbus/struct.Path.html\" title=\"struct dbus::Path\">Path</a>&lt;'m&gt;","synthetic":false,"types":["dbus::strings::Path"]},{"text":"impl&lt;'m&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/c_str/struct.CStr.html\" title=\"struct std::ffi::c_str::CStr\">CStr</a>&gt; for <a class=\"struct\" href=\"dbus/struct.Member.html\" title=\"struct dbus::Member\">Member</a>&lt;'m&gt;","synthetic":false,"types":["dbus::strings::Member"]},{"text":"impl&lt;'m&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/c_str/struct.CStr.html\" title=\"struct std::ffi::c_str::CStr\">CStr</a>&gt; for <a class=\"struct\" href=\"dbus/struct.Interface.html\" title=\"struct dbus::Interface\">Interface</a>&lt;'m&gt;","synthetic":false,"types":["dbus::strings::Interface"]},{"text":"impl&lt;'m&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/c_str/struct.CStr.html\" title=\"struct std::ffi::c_str::CStr\">CStr</a>&gt; for <a class=\"struct\" href=\"dbus/struct.BusName.html\" title=\"struct dbus::BusName\">BusName</a>&lt;'m&gt;","synthetic":false,"types":["dbus::strings::BusName"]},{"text":"impl&lt;'m&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/c_str/struct.CStr.html\" title=\"struct std::ffi::c_str::CStr\">CStr</a>&gt; for <a class=\"struct\" href=\"dbus/struct.ErrorName.html\" title=\"struct dbus::ErrorName\">ErrorName</a>&lt;'m&gt;","synthetic":false,"types":["dbus::strings::ErrorName"]}];
implementors["either"] = [{"text":"impl&lt;L, R, Target&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;Target&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;Target&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;Target&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/c_str/struct.CStr.html\" title=\"struct std::ffi::c_str::CStr\">CStr</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/c_str/struct.CStr.html\" title=\"struct std::ffi::c_str::CStr\">CStr</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/c_str/struct.CStr.html\" title=\"struct std::ffi::c_str::CStr\">CStr</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]},{"text":"impl&lt;L, R, Target&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a>Target<a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a>Target<a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a>Target<a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt;,&nbsp;</span>","synthetic":false,"types":["either::Either"]}];
implementors["futures_util"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt;&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"futures_util/io/struct.Window.html\" title=\"struct futures_util::io::Window\">Window</a>&lt;T&gt;","synthetic":false,"types":["futures_util::io::window::Window"]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 1]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U1.html\" title=\"type typenum::generated::consts::U1\">U1</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 2]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U2.html\" title=\"type typenum::generated::consts::U2\">U2</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 3]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U3.html\" title=\"type typenum::generated::consts::U3\">U3</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 4]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U4.html\" title=\"type typenum::generated::consts::U4\">U4</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 5]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U5.html\" title=\"type typenum::generated::consts::U5\">U5</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 6]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U6.html\" title=\"type typenum::generated::consts::U6\">U6</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 7]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U7.html\" title=\"type typenum::generated::consts::U7\">U7</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 8]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U8.html\" title=\"type typenum::generated::consts::U8\">U8</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 9]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U9.html\" title=\"type typenum::generated::consts::U9\">U9</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 10]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U10.html\" title=\"type typenum::generated::consts::U10\">U10</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 11]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U11.html\" title=\"type typenum::generated::consts::U11\">U11</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 12]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U12.html\" title=\"type typenum::generated::consts::U12\">U12</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 13]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U13.html\" title=\"type typenum::generated::consts::U13\">U13</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 14]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U14.html\" title=\"type typenum::generated::consts::U14\">U14</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 15]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U15.html\" title=\"type typenum::generated::consts::U15\">U15</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 16]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U16.html\" title=\"type typenum::generated::consts::U16\">U16</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 17]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U17.html\" title=\"type typenum::generated::consts::U17\">U17</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 18]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U18.html\" title=\"type typenum::generated::consts::U18\">U18</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 19]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U19.html\" title=\"type typenum::generated::consts::U19\">U19</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 20]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U20.html\" title=\"type typenum::generated::consts::U20\">U20</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 21]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U21.html\" title=\"type typenum::generated::consts::U21\">U21</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 22]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U22.html\" title=\"type typenum::generated::consts::U22\">U22</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 23]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U23.html\" title=\"type typenum::generated::consts::U23\">U23</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 24]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U24.html\" title=\"type typenum::generated::consts::U24\">U24</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 25]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U25.html\" title=\"type typenum::generated::consts::U25\">U25</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 26]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U26.html\" title=\"type typenum::generated::consts::U26\">U26</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 27]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U27.html\" title=\"type typenum::generated::consts::U27\">U27</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 28]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U28.html\" title=\"type typenum::generated::consts::U28\">U28</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 29]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U29.html\" title=\"type typenum::generated::consts::U29\">U29</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 30]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U30.html\" title=\"type typenum::generated::consts::U30\">U30</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 31]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U31.html\" title=\"type typenum::generated::consts::U31\">U31</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T; 32]&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/generated/consts/type.U32.html\" title=\"type typenum::generated::consts::U32\">U32</a>&gt;","synthetic":false,"types":["generic_array::GenericArray"]}];
implementors["glib"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"glib/struct.ByteArray.html\" title=\"struct glib::ByteArray\">ByteArray</a>","synthetic":false,"types":["glib::byte_array::ByteArray"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"glib/struct.Bytes.html\" title=\"struct glib::Bytes\">Bytes</a>","synthetic":false,"types":["glib::bytes::Bytes"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"glib/struct.String.html\" title=\"struct glib::String\">String</a>","synthetic":false,"types":["glib::string::String"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"glib/enum.GString.html\" title=\"enum glib::GString\">GString</a>","synthetic":false,"types":["glib::gstring::GString"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt; for <a class=\"enum\" href=\"glib/enum.GString.html\" title=\"enum glib::GString\">GString</a>","synthetic":false,"types":["glib::gstring::GString"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"glib/send_unique/trait.SendUnique.html\" title=\"trait glib::send_unique::SendUnique\">SendUnique</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"glib/send_unique/struct.Ref.html\" title=\"struct glib::send_unique::Ref\">Ref</a>&lt;'a, T&gt;","synthetic":false,"types":["glib::send_unique::Ref"]}];
implementors["gstreamer"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"gstreamer/miniobject/trait.MiniObject.html\" title=\"trait gstreamer::miniobject::MiniObject\">MiniObject</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"gstreamer/miniobject/struct.GstRc.html\" title=\"struct gstreamer::miniobject::GstRc\">GstRc</a>&lt;T&gt;","synthetic":false,"types":["gstreamer::miniobject::GstRc"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/message/struct.MessageRef.html\" title=\"struct gstreamer::message::MessageRef\">MessageRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/message/struct.Message.html\" title=\"struct gstreamer::message::Message\">Message</a>","synthetic":false,"types":["gstreamer::message::Message"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;<a class=\"primitive\" href=\"std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"gstreamer/struct.Fraction.html\" title=\"struct gstreamer::Fraction\">Fraction</a>","synthetic":false,"types":["gstreamer::value::Fraction"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/structure/struct.StructureRef.html\" title=\"struct gstreamer::structure::StructureRef\">StructureRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/structure/struct.Structure.html\" title=\"struct gstreamer::structure::Structure\">Structure</a>","synthetic":false,"types":["gstreamer::structure::Structure"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/caps/struct.CapsRef.html\" title=\"struct gstreamer::caps::CapsRef\">CapsRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/caps/struct.Caps.html\" title=\"struct gstreamer::caps::Caps\">Caps</a>","synthetic":false,"types":["gstreamer::caps::Caps"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/struct.CapsFeaturesRef.html\" title=\"struct gstreamer::CapsFeaturesRef\">CapsFeaturesRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/struct.CapsFeatures.html\" title=\"struct gstreamer::CapsFeatures\">CapsFeatures</a>","synthetic":false,"types":["gstreamer::caps_features::CapsFeatures"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/tags/struct.TagListRef.html\" title=\"struct gstreamer::tags::TagListRef\">TagListRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/tags/struct.TagList.html\" title=\"struct gstreamer::tags::TagList\">TagList</a>","synthetic":false,"types":["gstreamer::tags::TagList"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"gstreamer/meta/trait.MetaAPI.html\" title=\"trait gstreamer::meta::MetaAPI\">MetaAPI</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/meta/struct.MetaRef.html\" title=\"struct gstreamer::meta::MetaRef\">MetaRef</a>&lt;'a, T&gt;&gt; for <a class=\"struct\" href=\"gstreamer/meta/struct.MetaRef.html\" title=\"struct gstreamer::meta::MetaRef\">MetaRef</a>&lt;'a, T&gt;","synthetic":false,"types":["gstreamer::meta::MetaRef"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"gstreamer/meta/trait.MetaAPI.html\" title=\"trait gstreamer::meta::MetaAPI\">MetaAPI</a>, U&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/meta/struct.MetaRef.html\" title=\"struct gstreamer::meta::MetaRef\">MetaRef</a>&lt;'a, T&gt;&gt; for <a class=\"struct\" href=\"gstreamer/meta/struct.MetaRefMut.html\" title=\"struct gstreamer::meta::MetaRefMut\">MetaRefMut</a>&lt;'a, T, U&gt;","synthetic":false,"types":["gstreamer::meta::MetaRefMut"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/buffer/struct.BufferRef.html\" title=\"struct gstreamer::buffer::BufferRef\">BufferRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/buffer/struct.Buffer.html\" title=\"struct gstreamer::buffer::Buffer\">Buffer</a>","synthetic":false,"types":["gstreamer::buffer::Buffer"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"gstreamer/buffer/struct.BufferMap.html\" title=\"struct gstreamer::buffer::BufferMap\">BufferMap</a>&lt;'a, T&gt;","synthetic":false,"types":["gstreamer::buffer::BufferMap"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"gstreamer/buffer/struct.MappedBuffer.html\" title=\"struct gstreamer::buffer::MappedBuffer\">MappedBuffer</a>&lt;T&gt;","synthetic":false,"types":["gstreamer::buffer::MappedBuffer"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/memory/struct.MemoryRef.html\" title=\"struct gstreamer::memory::MemoryRef\">MemoryRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/memory/struct.Memory.html\" title=\"struct gstreamer::memory::Memory\">Memory</a>","synthetic":false,"types":["gstreamer::memory::Memory"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"gstreamer/memory/struct.MemoryMap.html\" title=\"struct gstreamer::memory::MemoryMap\">MemoryMap</a>&lt;'a, T&gt;","synthetic":false,"types":["gstreamer::memory::MemoryMap"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"gstreamer/memory/struct.MappedMemory.html\" title=\"struct gstreamer::memory::MappedMemory\">MappedMemory</a>&lt;T&gt;","synthetic":false,"types":["gstreamer::memory::MappedMemory"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/sample/struct.SampleRef.html\" title=\"struct gstreamer::sample::SampleRef\">SampleRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/sample/struct.Sample.html\" title=\"struct gstreamer::sample::Sample\">Sample</a>","synthetic":false,"types":["gstreamer::sample::Sample"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/bufferlist/struct.BufferListRef.html\" title=\"struct gstreamer::bufferlist::BufferListRef\">BufferListRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/bufferlist/struct.BufferList.html\" title=\"struct gstreamer::bufferlist::BufferList\">BufferList</a>","synthetic":false,"types":["gstreamer::bufferlist::BufferList"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/query/struct.QueryRef.html\" title=\"struct gstreamer::query::QueryRef\">QueryRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/query/struct.Query.html\" title=\"struct gstreamer::query::Query\">Query</a>","synthetic":false,"types":["gstreamer::query::Query"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/event/struct.EventRef.html\" title=\"struct gstreamer::event::EventRef\">EventRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/event/struct.Event.html\" title=\"struct gstreamer::event::Event\">Event</a>","synthetic":false,"types":["gstreamer::event::Event"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/context/struct.ContextRef.html\" title=\"struct gstreamer::context::ContextRef\">ContextRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/context/struct.Context.html\" title=\"struct gstreamer::context::Context\">Context</a>","synthetic":false,"types":["gstreamer::context::Context"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"enum\" href=\"core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"gstreamer/format/struct.Default.html\" title=\"struct gstreamer::format::Default\">Default</a>","synthetic":false,"types":["gstreamer::format::Default"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"enum\" href=\"core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"gstreamer/format/struct.Bytes.html\" title=\"struct gstreamer::format::Bytes\">Bytes</a>","synthetic":false,"types":["gstreamer::format::Bytes"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"enum\" href=\"core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"gstreamer/struct.ClockTime.html\" title=\"struct gstreamer::ClockTime\">ClockTime</a>","synthetic":false,"types":["gstreamer::clock_time::ClockTime"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"enum\" href=\"core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"gstreamer/format/struct.Buffers.html\" title=\"struct gstreamer::format::Buffers\">Buffers</a>","synthetic":false,"types":["gstreamer::format::Buffers"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"gstreamer/format/struct.Undefined.html\" title=\"struct gstreamer::format::Undefined\">Undefined</a>","synthetic":false,"types":["gstreamer::format::Undefined"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"enum\" href=\"core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"gstreamer/format/struct.Percent.html\" title=\"struct gstreamer::format::Percent\">Percent</a>","synthetic":false,"types":["gstreamer::format::Percent"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"gstreamer/format/trait.FormattedValue.html\" title=\"trait gstreamer::format::FormattedValue\">FormattedValue</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/struct.FormattedSegment.html\" title=\"struct gstreamer::FormattedSegment\">FormattedSegment</a>&lt;<a class=\"enum\" href=\"gstreamer/format/enum.GenericFormattedValue.html\" title=\"enum gstreamer::format::GenericFormattedValue\">GenericFormattedValue</a>&gt;&gt; for <a class=\"struct\" href=\"gstreamer/struct.FormattedSegment.html\" title=\"struct gstreamer::FormattedSegment\">FormattedSegment</a>&lt;T&gt;","synthetic":false,"types":["gstreamer::segment::FormattedSegment"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/toc/struct.TocRef.html\" title=\"struct gstreamer::toc::TocRef\">TocRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/toc/struct.Toc.html\" title=\"struct gstreamer::toc::Toc\">Toc</a>","synthetic":false,"types":["gstreamer::toc::Toc"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/toc/struct.TocEntryRef.html\" title=\"struct gstreamer::toc::TocEntryRef\">TocEntryRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/toc/struct.TocEntry.html\" title=\"struct gstreamer::toc::TocEntry\">TocEntry</a>","synthetic":false,"types":["gstreamer::toc::TocEntry"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/structure/struct.StructureRef.html\" title=\"struct gstreamer::structure::StructureRef\">StructureRef</a>&gt; for <a class=\"struct\" href=\"gstreamer/struct.BufferPoolConfig.html\" title=\"struct gstreamer::BufferPoolConfig\">BufferPoolConfig</a>","synthetic":false,"types":["gstreamer::buffer_pool::BufferPoolConfig"]}];
implementors["gstreamer_base"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"gstreamer_base/struct.UniqueAdapterMap.html\" title=\"struct gstreamer_base::UniqueAdapterMap\">UniqueAdapterMap</a>&lt;'a&gt;","synthetic":false,"types":["gstreamer_base::adapter::UniqueAdapterMap"]}];
implementors["gstreamer_player"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/structure/struct.StructureRef.html\" title=\"struct gstreamer::structure::StructureRef\">StructureRef</a>&gt; for <a class=\"struct\" href=\"gstreamer_player/struct.PlayerConfig.html\" title=\"struct gstreamer_player::PlayerConfig\">PlayerConfig</a>","synthetic":false,"types":["gstreamer_player::config::PlayerConfig"]}];
implementors["gstreamer_video"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer_video/struct.VideoOverlayRectangleRef.html\" title=\"struct gstreamer_video::VideoOverlayRectangleRef\">VideoOverlayRectangleRef</a>&gt; for <a class=\"struct\" href=\"gstreamer_video/struct.VideoOverlayRectangle.html\" title=\"struct gstreamer_video::VideoOverlayRectangle\">VideoOverlayRectangle</a>","synthetic":false,"types":["gstreamer_video::video_overlay_composition::VideoOverlayRectangle"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer_video/struct.VideoOverlayCompositionRef.html\" title=\"struct gstreamer_video::VideoOverlayCompositionRef\">VideoOverlayCompositionRef</a>&gt; for <a class=\"struct\" href=\"gstreamer_video/struct.VideoOverlayComposition.html\" title=\"struct gstreamer_video::VideoOverlayComposition\">VideoOverlayComposition</a>","synthetic":false,"types":["gstreamer_video::video_overlay_composition::VideoOverlayComposition"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"gstreamer/structure/struct.StructureRef.html\" title=\"struct gstreamer::structure::StructureRef\">StructureRef</a>&gt; for <a class=\"struct\" href=\"gstreamer_video/video_converter/struct.VideoConverterConfig.html\" title=\"struct gstreamer_video::video_converter::VideoConverterConfig\">VideoConverterConfig</a>","synthetic":false,"types":["gstreamer_video::video_converter::VideoConverterConfig"]}];
implementors["http"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"http/header/struct.HeaderName.html\" title=\"struct http::header::HeaderName\">HeaderName</a>","synthetic":false,"types":["http::header::name::HeaderName"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"http/header/struct.HeaderName.html\" title=\"struct http::header::HeaderName\">HeaderName</a>","synthetic":false,"types":["http::header::name::HeaderName"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"http/header/struct.HeaderValue.html\" title=\"struct http::header::HeaderValue\">HeaderValue</a>","synthetic":false,"types":["http::header::value::HeaderValue"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"http/method/struct.Method.html\" title=\"struct http::method::Method\">Method</a>","synthetic":false,"types":["http::method::Method"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"http/uri/struct.Authority.html\" title=\"struct http::uri::Authority\">Authority</a>","synthetic":false,"types":["http::uri::authority::Authority"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"http/uri/struct.Port.html\" title=\"struct http::uri::Port\">Port</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt;,&nbsp;</span>","synthetic":false,"types":["http::uri::port::Port"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"http/uri/struct.Scheme.html\" title=\"struct http::uri::Scheme\">Scheme</a>","synthetic":false,"types":["http::uri::scheme::Scheme"]}];
implementors["httparse"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"httparse/iter/struct.Bytes.html\" title=\"struct httparse::iter::Bytes\">Bytes</a>&lt;'a&gt;","synthetic":false,"types":["httparse::iter::Bytes"]}];
implementors["humantime"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"humantime/struct.Duration.html\" title=\"struct humantime::Duration\">Duration</a>","synthetic":false,"types":["humantime::wrapper::Duration"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/time/struct.SystemTime.html\" title=\"struct std::time::SystemTime\">SystemTime</a>&gt; for <a class=\"struct\" href=\"humantime/struct.Timestamp.html\" title=\"struct humantime::Timestamp\">Timestamp</a>","synthetic":false,"types":["humantime::wrapper::Timestamp"]}];
implementors["hyper"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"hyper/struct.Chunk.html\" title=\"struct hyper::Chunk\">Chunk</a>","synthetic":false,"types":["hyper::body::chunk::Chunk"]}];
implementors["memmap"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"memmap/struct.Mmap.html\" title=\"struct memmap::Mmap\">Mmap</a>","synthetic":false,"types":["memmap::Mmap"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"memmap/struct.MmapMut.html\" title=\"struct memmap::MmapMut\">MmapMut</a>","synthetic":false,"types":["memmap::MmapMut"]}];
implementors["mime"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"mime/struct.Mime.html\" title=\"struct mime::Mime\">Mime</a>","synthetic":false,"types":["mime::Mime"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"mime/struct.Name.html\" title=\"struct mime::Name\">Name</a>&lt;'a&gt;","synthetic":false,"types":["mime::Name"]}];
implementors["nix"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"nix/sys/signal/enum.Signal.html\" title=\"enum nix::sys::signal::Signal\">Signal</a>","synthetic":false,"types":["nix::sys::signal::Signal"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"libc/unix/linux_like/linux/gnu/b64/struct.sigset_t.html\" title=\"struct libc::unix::linux_like::linux::gnu::b64::sigset_t\">sigset_t</a>&gt; for <a class=\"struct\" href=\"nix/sys/signal/struct.SigSet.html\" title=\"struct nix::sys::signal::SigSet\">SigSet</a>","synthetic":false,"types":["nix::sys::signal::SigSet"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"libc/unix/struct.timespec.html\" title=\"struct libc::unix::timespec\">timespec</a>&gt; for <a class=\"struct\" href=\"nix/sys/time/struct.TimeSpec.html\" title=\"struct nix::sys::time::TimeSpec\">TimeSpec</a>","synthetic":false,"types":["nix::sys::time::TimeSpec"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"libc/unix/struct.timeval.html\" title=\"struct libc::unix::timeval\">timeval</a>&gt; for <a class=\"struct\" href=\"nix/sys/time/struct.TimeVal.html\" title=\"struct nix::sys::time::TimeVal\">TimeVal</a>","synthetic":false,"types":["nix::sys::time::TimeVal"]}];
implementors["openssl"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/asn1/struct.Asn1GeneralizedTimeRef.html\" title=\"struct openssl::asn1::Asn1GeneralizedTimeRef\">Asn1GeneralizedTimeRef</a>&gt; for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1GeneralizedTime.html\" title=\"struct openssl::asn1::Asn1GeneralizedTime\">Asn1GeneralizedTime</a>","synthetic":false,"types":["openssl::asn1::Asn1GeneralizedTime"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/asn1/struct.Asn1TimeRef.html\" title=\"struct openssl::asn1::Asn1TimeRef\">Asn1TimeRef</a>&gt; for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Time.html\" title=\"struct openssl::asn1::Asn1Time\">Asn1Time</a>","synthetic":false,"types":["openssl::asn1::Asn1Time"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/asn1/struct.Asn1StringRef.html\" title=\"struct openssl::asn1::Asn1StringRef\">Asn1StringRef</a>&gt; for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1String.html\" title=\"struct openssl::asn1::Asn1String\">Asn1String</a>","synthetic":false,"types":["openssl::asn1::Asn1String"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/asn1/struct.Asn1IntegerRef.html\" title=\"struct openssl::asn1::Asn1IntegerRef\">Asn1IntegerRef</a>&gt; for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Integer.html\" title=\"struct openssl::asn1::Asn1Integer\">Asn1Integer</a>","synthetic":false,"types":["openssl::asn1::Asn1Integer"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/asn1/struct.Asn1BitStringRef.html\" title=\"struct openssl::asn1::Asn1BitStringRef\">Asn1BitStringRef</a>&gt; for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1BitString.html\" title=\"struct openssl::asn1::Asn1BitString\">Asn1BitString</a>","synthetic":false,"types":["openssl::asn1::Asn1BitString"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/asn1/struct.Asn1ObjectRef.html\" title=\"struct openssl::asn1::Asn1ObjectRef\">Asn1ObjectRef</a>&gt; for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Object.html\" title=\"struct openssl::asn1::Asn1Object\">Asn1Object</a>","synthetic":false,"types":["openssl::asn1::Asn1Object"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/bn/struct.BigNumContextRef.html\" title=\"struct openssl::bn::BigNumContextRef\">BigNumContextRef</a>&gt; for <a class=\"struct\" href=\"openssl/bn/struct.BigNumContext.html\" title=\"struct openssl::bn::BigNumContext\">BigNumContext</a>","synthetic":false,"types":["openssl::bn::BigNumContext"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/bn/struct.BigNumRef.html\" title=\"struct openssl::bn::BigNumRef\">BigNumRef</a>&gt; for <a class=\"struct\" href=\"openssl/bn/struct.BigNum.html\" title=\"struct openssl::bn::BigNum\">BigNum</a>","synthetic":false,"types":["openssl::bn::BigNum"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/cms/struct.CmsContentInfoRef.html\" title=\"struct openssl::cms::CmsContentInfoRef\">CmsContentInfoRef</a>&gt; for <a class=\"struct\" href=\"openssl/cms/struct.CmsContentInfo.html\" title=\"struct openssl::cms::CmsContentInfo\">CmsContentInfo</a>","synthetic":false,"types":["openssl::cms::CmsContentInfo"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/conf/struct.ConfRef.html\" title=\"struct openssl::conf::ConfRef\">ConfRef</a>&gt; for <a class=\"struct\" href=\"openssl/conf/struct.Conf.html\" title=\"struct openssl::conf::Conf\">Conf</a>","synthetic":false,"types":["openssl::conf::Conf"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/dh/struct.DhRef.html\" title=\"struct openssl::dh::DhRef\">DhRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"openssl/dh/struct.Dh.html\" title=\"struct openssl::dh::Dh\">Dh</a>&lt;T&gt;","synthetic":false,"types":["openssl::dh::Dh"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/dsa/struct.DsaRef.html\" title=\"struct openssl::dsa::DsaRef\">DsaRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"openssl/dsa/struct.Dsa.html\" title=\"struct openssl::dsa::Dsa\">Dsa</a>&lt;T&gt;","synthetic":false,"types":["openssl::dsa::Dsa"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ec/struct.EcGroupRef.html\" title=\"struct openssl::ec::EcGroupRef\">EcGroupRef</a>&gt; for <a class=\"struct\" href=\"openssl/ec/struct.EcGroup.html\" title=\"struct openssl::ec::EcGroup\">EcGroup</a>","synthetic":false,"types":["openssl::ec::EcGroup"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ec/struct.EcPointRef.html\" title=\"struct openssl::ec::EcPointRef\">EcPointRef</a>&gt; for <a class=\"struct\" href=\"openssl/ec/struct.EcPoint.html\" title=\"struct openssl::ec::EcPoint\">EcPoint</a>","synthetic":false,"types":["openssl::ec::EcPoint"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ec/struct.EcKeyRef.html\" title=\"struct openssl::ec::EcKeyRef\">EcKeyRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"openssl/ec/struct.EcKey.html\" title=\"struct openssl::ec::EcKey\">EcKey</a>&lt;T&gt;","synthetic":false,"types":["openssl::ec::EcKey"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ecdsa/struct.EcdsaSigRef.html\" title=\"struct openssl::ecdsa::EcdsaSigRef\">EcdsaSigRef</a>&gt; for <a class=\"struct\" href=\"openssl/ecdsa/struct.EcdsaSig.html\" title=\"struct openssl::ecdsa::EcdsaSig\">EcdsaSig</a>","synthetic":false,"types":["openssl::ecdsa::EcdsaSig"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"openssl/hash/struct.DigestBytes.html\" title=\"struct openssl::hash::DigestBytes\">DigestBytes</a>","synthetic":false,"types":["openssl::hash::DigestBytes"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ocsp/struct.OcspBasicResponseRef.html\" title=\"struct openssl::ocsp::OcspBasicResponseRef\">OcspBasicResponseRef</a>&gt; for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspBasicResponse.html\" title=\"struct openssl::ocsp::OcspBasicResponse\">OcspBasicResponse</a>","synthetic":false,"types":["openssl::ocsp::OcspBasicResponse"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ocsp/struct.OcspCertIdRef.html\" title=\"struct openssl::ocsp::OcspCertIdRef\">OcspCertIdRef</a>&gt; for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspCertId.html\" title=\"struct openssl::ocsp::OcspCertId\">OcspCertId</a>","synthetic":false,"types":["openssl::ocsp::OcspCertId"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ocsp/struct.OcspResponseRef.html\" title=\"struct openssl::ocsp::OcspResponseRef\">OcspResponseRef</a>&gt; for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspResponse.html\" title=\"struct openssl::ocsp::OcspResponse\">OcspResponse</a>","synthetic":false,"types":["openssl::ocsp::OcspResponse"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ocsp/struct.OcspRequestRef.html\" title=\"struct openssl::ocsp::OcspRequestRef\">OcspRequestRef</a>&gt; for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspRequest.html\" title=\"struct openssl::ocsp::OcspRequest\">OcspRequest</a>","synthetic":false,"types":["openssl::ocsp::OcspRequest"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ocsp/struct.OcspOneReqRef.html\" title=\"struct openssl::ocsp::OcspOneReqRef\">OcspOneReqRef</a>&gt; for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspOneReq.html\" title=\"struct openssl::ocsp::OcspOneReq\">OcspOneReq</a>","synthetic":false,"types":["openssl::ocsp::OcspOneReq"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/pkcs12/struct.Pkcs12Ref.html\" title=\"struct openssl::pkcs12::Pkcs12Ref\">Pkcs12Ref</a>&gt; for <a class=\"struct\" href=\"openssl/pkcs12/struct.Pkcs12.html\" title=\"struct openssl::pkcs12::Pkcs12\">Pkcs12</a>","synthetic":false,"types":["openssl::pkcs12::Pkcs12"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7Ref.html\" title=\"struct openssl::pkcs7::Pkcs7Ref\">Pkcs7Ref</a>&gt; for <a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7.html\" title=\"struct openssl::pkcs7::Pkcs7\">Pkcs7</a>","synthetic":false,"types":["openssl::pkcs7::Pkcs7"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/pkey/struct.PKeyRef.html\" title=\"struct openssl::pkey::PKeyRef\">PKeyRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"openssl/pkey/struct.PKey.html\" title=\"struct openssl::pkey::PKey\">PKey</a>&lt;T&gt;","synthetic":false,"types":["openssl::pkey::PKey"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/rsa/struct.RsaRef.html\" title=\"struct openssl::rsa::RsaRef\">RsaRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"openssl/rsa/struct.Rsa.html\" title=\"struct openssl::rsa::Rsa\">Rsa</a>&lt;T&gt;","synthetic":false,"types":["openssl::rsa::Rsa"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/srtp/struct.SrtpProtectionProfileRef.html\" title=\"struct openssl::srtp::SrtpProtectionProfileRef\">SrtpProtectionProfileRef</a>&gt; for <a class=\"struct\" href=\"openssl/srtp/struct.SrtpProtectionProfile.html\" title=\"struct openssl::srtp::SrtpProtectionProfile\">SrtpProtectionProfile</a>","synthetic":false,"types":["openssl::srtp::SrtpProtectionProfile"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ssl/struct.SslContextRef.html\" title=\"struct openssl::ssl::SslContextRef\">SslContextRef</a>&gt; for <a class=\"struct\" href=\"openssl/ssl/struct.SslContext.html\" title=\"struct openssl::ssl::SslContext\">SslContext</a>","synthetic":false,"types":["openssl::ssl::SslContext"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ssl/struct.SslSessionRef.html\" title=\"struct openssl::ssl::SslSessionRef\">SslSessionRef</a>&gt; for <a class=\"struct\" href=\"openssl/ssl/struct.SslSession.html\" title=\"struct openssl::ssl::SslSession\">SslSession</a>","synthetic":false,"types":["openssl::ssl::SslSession"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/ssl/struct.SslRef.html\" title=\"struct openssl::ssl::SslRef\">SslRef</a>&gt; for <a class=\"struct\" href=\"openssl/ssl/struct.Ssl.html\" title=\"struct openssl::ssl::Ssl\">Ssl</a>","synthetic":false,"types":["openssl::ssl::Ssl"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"openssl/stack/trait.Stackable.html\" title=\"trait openssl::stack::Stackable\">Stackable</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/stack/struct.StackRef.html\" title=\"struct openssl::stack::StackRef\">StackRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"openssl/stack/struct.Stack.html\" title=\"struct openssl::stack::Stack\">Stack</a>&lt;T&gt;","synthetic":false,"types":["openssl::stack::Stack"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/string/struct.OpensslStringRef.html\" title=\"struct openssl::string::OpensslStringRef\">OpensslStringRef</a>&gt; for <a class=\"struct\" href=\"openssl/string/struct.OpensslString.html\" title=\"struct openssl::string::OpensslString\">OpensslString</a>","synthetic":false,"types":["openssl::string::OpensslString"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"openssl/string/struct.OpensslString.html\" title=\"struct openssl::string::OpensslString\">OpensslString</a>","synthetic":false,"types":["openssl::string::OpensslString"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"openssl/string/struct.OpensslString.html\" title=\"struct openssl::string::OpensslString\">OpensslString</a>","synthetic":false,"types":["openssl::string::OpensslString"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"openssl/string/struct.OpensslStringRef.html\" title=\"struct openssl::string::OpensslStringRef\">OpensslStringRef</a>","synthetic":false,"types":["openssl::string::OpensslStringRef"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"openssl/string/struct.OpensslStringRef.html\" title=\"struct openssl::string::OpensslStringRef\">OpensslStringRef</a>","synthetic":false,"types":["openssl::string::OpensslStringRef"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyParamRef.html\" title=\"struct openssl::x509::verify::X509VerifyParamRef\">X509VerifyParamRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyParam.html\" title=\"struct openssl::x509::verify::X509VerifyParam\">X509VerifyParam</a>","synthetic":false,"types":["openssl::x509::verify::X509VerifyParam"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/store/struct.X509StoreBuilderRef.html\" title=\"struct openssl::x509::store::X509StoreBuilderRef\">X509StoreBuilderRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/store/struct.X509StoreBuilder.html\" title=\"struct openssl::x509::store::X509StoreBuilder\">X509StoreBuilder</a>","synthetic":false,"types":["openssl::x509::store::X509StoreBuilder"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/store/struct.X509LookupRef.html\" title=\"struct openssl::x509::store::X509LookupRef\">X509LookupRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"openssl/x509/store/struct.X509Lookup.html\" title=\"struct openssl::x509::store::X509Lookup\">X509Lookup</a>&lt;T&gt;","synthetic":false,"types":["openssl::x509::store::X509Lookup"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/store/struct.X509LookupMethodRef.html\" title=\"struct openssl::x509::store::X509LookupMethodRef\">X509LookupMethodRef</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"openssl/x509/store/struct.X509LookupMethod.html\" title=\"struct openssl::x509::store::X509LookupMethod\">X509LookupMethod</a>&lt;T&gt;","synthetic":false,"types":["openssl::x509::store::X509LookupMethod"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/store/struct.X509StoreRef.html\" title=\"struct openssl::x509::store::X509StoreRef\">X509StoreRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/store/struct.X509Store.html\" title=\"struct openssl::x509::store::X509Store\">X509Store</a>","synthetic":false,"types":["openssl::x509::store::X509Store"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.X509StoreContextRef.html\" title=\"struct openssl::x509::X509StoreContextRef\">X509StoreContextRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.X509StoreContext.html\" title=\"struct openssl::x509::X509StoreContext\">X509StoreContext</a>","synthetic":false,"types":["openssl::x509::X509StoreContext"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.X509Ref.html\" title=\"struct openssl::x509::X509Ref\">X509Ref</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.X509.html\" title=\"struct openssl::x509::X509\">X509</a>","synthetic":false,"types":["openssl::x509::X509"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.X509Ref.html\" title=\"struct openssl::x509::X509Ref\">X509Ref</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.X509Ref.html\" title=\"struct openssl::x509::X509Ref\">X509Ref</a>","synthetic":false,"types":["openssl::x509::X509Ref"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.X509ExtensionRef.html\" title=\"struct openssl::x509::X509ExtensionRef\">X509ExtensionRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.X509Extension.html\" title=\"struct openssl::x509::X509Extension\">X509Extension</a>","synthetic":false,"types":["openssl::x509::X509Extension"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.X509NameRef.html\" title=\"struct openssl::x509::X509NameRef\">X509NameRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.X509Name.html\" title=\"struct openssl::x509::X509Name\">X509Name</a>","synthetic":false,"types":["openssl::x509::X509Name"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.X509NameEntryRef.html\" title=\"struct openssl::x509::X509NameEntryRef\">X509NameEntryRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.X509NameEntry.html\" title=\"struct openssl::x509::X509NameEntry\">X509NameEntry</a>","synthetic":false,"types":["openssl::x509::X509NameEntry"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.X509ReqRef.html\" title=\"struct openssl::x509::X509ReqRef\">X509ReqRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.X509Req.html\" title=\"struct openssl::x509::X509Req\">X509Req</a>","synthetic":false,"types":["openssl::x509::X509Req"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.GeneralNameRef.html\" title=\"struct openssl::x509::GeneralNameRef\">GeneralNameRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.GeneralName.html\" title=\"struct openssl::x509::GeneralName\">GeneralName</a>","synthetic":false,"types":["openssl::x509::GeneralName"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.X509AlgorithmRef.html\" title=\"struct openssl::x509::X509AlgorithmRef\">X509AlgorithmRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.X509Algorithm.html\" title=\"struct openssl::x509::X509Algorithm\">X509Algorithm</a>","synthetic":false,"types":["openssl::x509::X509Algorithm"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openssl/x509/struct.X509ObjectRef.html\" title=\"struct openssl::x509::X509ObjectRef\">X509ObjectRef</a>&gt; for <a class=\"struct\" href=\"openssl/x509/struct.X509Object.html\" title=\"struct openssl::x509::X509Object\">X509Object</a>","synthetic":false,"types":["openssl::x509::X509Object"]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"ordered_float/struct.OrderedFloat.html\" title=\"struct ordered_float::OrderedFloat\">OrderedFloat</a>&lt;T&gt;","synthetic":false,"types":["ordered_float::OrderedFloat"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"ordered_float/struct.NotNan.html\" title=\"struct ordered_float::NotNan\">NotNan</a>&lt;T&gt;","synthetic":false,"types":["ordered_float::NotNan"]}];
implementors["owning_ref"] = [{"text":"impl&lt;O, T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"owning_ref/struct.OwningRef.html\" title=\"struct owning_ref::OwningRef\">OwningRef</a>&lt;O, T&gt;","synthetic":false,"types":["owning_ref::OwningRef"]},{"text":"impl&lt;O, T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"owning_ref/struct.OwningRefMut.html\" title=\"struct owning_ref::OwningRefMut\">OwningRefMut</a>&lt;O, T&gt;","synthetic":false,"types":["owning_ref::OwningRefMut"]}];
implementors["rand_chacha"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a>T<a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"rand_chacha/chacha/struct.Array64.html\" title=\"struct rand_chacha::chacha::Array64\">Array64</a>&lt;T&gt;","synthetic":false,"types":["rand_chacha::chacha::Array64"]}];
implementors["rand_isaac"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a>T<a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"rand_isaac/isaac_array/struct.IsaacArray.html\" title=\"struct rand_isaac::isaac_array::IsaacArray\">IsaacArray</a>&lt;T&gt;","synthetic":false,"types":["rand_isaac::isaac_array::IsaacArray"]}];
implementors["regex_syntax"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>","synthetic":false,"types":["regex_syntax::hir::literal::Literal"]}];
implementors["script"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"script/dom/bindings/str/struct.USVString.html\" title=\"struct script::dom::bindings::str::USVString\">USVString</a>","synthetic":false,"types":["script::dom::bindings::str::USVString"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"script/dom/bindings/str/struct.DOMString.html\" title=\"struct script::dom::bindings::str::DOMString\">DOMString</a>","synthetic":false,"types":["script::dom::bindings::str::DOMString"]}];
implementors["serde_bytes"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"serde_bytes/struct.Bytes.html\" title=\"struct serde_bytes::Bytes\">Bytes</a>","synthetic":false,"types":["serde_bytes::bytes::Bytes"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"serde_bytes/struct.ByteBuf.html\" title=\"struct serde_bytes::ByteBuf\">ByteBuf</a>","synthetic":false,"types":["serde_bytes::bytebuf::ByteBuf"]}];
implementors["serde_derive"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>&gt; for <a class=\"enum\" href=\"serde_derive/fragment/enum.Fragment.html\" title=\"enum serde_derive::fragment::Fragment\">Fragment</a>","synthetic":false,"types":["serde_derive::fragment::Fragment"]}];
implementors["servo_arc"] = [{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"servo_arc/struct.Arc.html\" title=\"struct servo_arc::Arc\">Arc</a>&lt;T&gt;","synthetic":false,"types":["servo_arc::Arc"]}];
implementors["servo_media_audio"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.f32.html\">f32</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"servo_media_audio/offline_sink/struct.ProcessedAudio.html\" title=\"struct servo_media_audio::offline_sink::ProcessedAudio\">ProcessedAudio</a>","synthetic":false,"types":["servo_media_audio::offline_sink::ProcessedAudio"]}];
implementors["servo_media_gstreamer"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.f32.html\">f32</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"servo_media_gstreamer/audio_decoder/struct.GStreamerAudioDecoderProgress.html\" title=\"struct servo_media_gstreamer::audio_decoder::GStreamerAudioDecoderProgress\">GStreamerAudioDecoderProgress</a>","synthetic":false,"types":["servo_media_gstreamer::audio_decoder::GStreamerAudioDecoderProgress"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.f32.html\">f32</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"servo_media_gstreamer/player/struct.GStreamerAudioChunk.html\" title=\"struct servo_media_gstreamer::player::GStreamerAudioChunk\">GStreamerAudioChunk</a>","synthetic":false,"types":["servo_media_gstreamer::player::GStreamerAudioChunk"]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a>&lt;A as <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&gt;::<a class=\"type\" href=\"smallvec/trait.Array.html#associatedtype.Item\" title=\"type smallvec::Array::Item\">Item</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt;","synthetic":false,"types":["smallvec::SmallVec"]}];
implementors["string_cache"] = [{"text":"impl&lt;Static:&nbsp;<a class=\"trait\" href=\"string_cache/static_sets/trait.StaticAtomSet.html\" title=\"trait string_cache::static_sets::StaticAtomSet\">StaticAtomSet</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"string_cache/struct.Atom.html\" title=\"struct string_cache::Atom\">Atom</a>&lt;Static&gt;","synthetic":false,"types":["string_cache::atom::Atom"]}];
implementors["tempfile"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"struct\" href=\"tempfile/struct.TempDir.html\" title=\"struct tempfile::TempDir\">TempDir</a>","synthetic":false,"types":["tempfile::dir::TempDir"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"struct\" href=\"tempfile/struct.TempPath.html\" title=\"struct tempfile::TempPath\">TempPath</a>","synthetic":false,"types":["tempfile::file::TempPath"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt; for <a class=\"struct\" href=\"tempfile/struct.TempPath.html\" title=\"struct tempfile::TempPath\">TempPath</a>","synthetic":false,"types":["tempfile::file::TempPath"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"struct\" href=\"tempfile/struct.NamedTempFile.html\" title=\"struct tempfile::NamedTempFile\">NamedTempFile</a>","synthetic":false,"types":["tempfile::file::NamedTempFile"]}];
implementors["tendril"] = [{"text":"impl&lt;F, A&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;&lt;F as <a class=\"trait\" href=\"tendril/fmt/trait.SliceFormat.html\" title=\"trait tendril::fmt::SliceFormat\">SliceFormat</a>&gt;::<a class=\"type\" href=\"tendril/fmt/trait.SliceFormat.html#associatedtype.Slice\" title=\"type tendril::fmt::SliceFormat::Slice\">Slice</a>&gt; for <a class=\"struct\" href=\"tendril/struct.Tendril.html\" title=\"struct tendril::Tendril\">Tendril</a>&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"tendril/fmt/trait.SliceFormat.html\" title=\"trait tendril::fmt::SliceFormat\">SliceFormat</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"tendril/tendril/trait.Atomicity.html\" title=\"trait tendril::tendril::Atomicity\">Atomicity</a>,&nbsp;</span>","synthetic":false,"types":["tendril::tendril::Tendril"]}];
implementors["thin_slice"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a>T<a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"thin_slice/struct.ThinBoxedSlice.html\" title=\"struct thin_slice::ThinBoxedSlice\">ThinBoxedSlice</a>&lt;T&gt;","synthetic":false,"types":["thin_slice::ThinBoxedSlice"]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"tinyvec/array/trait.Array.html\" title=\"trait tinyvec::array::Array\">Array</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[&lt;A as <a class=\"trait\" href=\"tinyvec/array/trait.Array.html\" title=\"trait tinyvec::array::Array\">Array</a>&gt;::<a class=\"type\" href=\"tinyvec/array/trait.Array.html#associatedtype.Item\" title=\"type tinyvec::array::Array::Item\">Item</a>]&gt; for <a class=\"struct\" href=\"tinyvec/struct.ArrayVec.html\" title=\"struct tinyvec::ArrayVec\">ArrayVec</a>&lt;A&gt;","synthetic":false,"types":["tinyvec::arrayvec::ArrayVec"]},{"text":"impl&lt;'s, T&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[T]&gt; for <a class=\"struct\" href=\"tinyvec/struct.SliceVec.html\" title=\"struct tinyvec::SliceVec\">SliceVec</a>&lt;'s, T&gt;","synthetic":false,"types":["tinyvec::slicevec::SliceVec"]},{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"tinyvec/array/trait.Array.html\" title=\"trait tinyvec::array::Array\">Array</a>&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[&lt;A as <a class=\"trait\" href=\"tinyvec/array/trait.Array.html\" title=\"trait tinyvec::array::Array\">Array</a>&gt;::<a class=\"type\" href=\"tinyvec/array/trait.Array.html#associatedtype.Item\" title=\"type tinyvec::array::Array::Item\">Item</a>]&gt; for <a class=\"enum\" href=\"tinyvec/enum.TinyVec.html\" title=\"enum tinyvec::TinyVec\">TinyVec</a>&lt;A&gt;","synthetic":false,"types":["tinyvec::tinyvec::TinyVec"]}];
implementors["tokio"] = [{"text":"impl&lt;'_&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"tokio/net/struct.TcpStream.html\" title=\"struct tokio::net::TcpStream\">TcpStream</a>&gt; for <a class=\"struct\" href=\"tokio/net/tcp/struct.ReadHalf.html\" title=\"struct tokio::net::tcp::ReadHalf\">ReadHalf</a>&lt;'_&gt;","synthetic":false,"types":["tokio::net::tcp::split::ReadHalf"]},{"text":"impl&lt;'_&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"tokio/net/struct.TcpStream.html\" title=\"struct tokio::net::TcpStream\">TcpStream</a>&gt; for <a class=\"struct\" href=\"tokio/net/tcp/struct.WriteHalf.html\" title=\"struct tokio::net::tcp::WriteHalf\">WriteHalf</a>&lt;'_&gt;","synthetic":false,"types":["tokio::net::tcp::split::WriteHalf"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"tokio/net/struct.TcpStream.html\" title=\"struct tokio::net::TcpStream\">TcpStream</a>&gt; for <a class=\"struct\" href=\"tokio/net/tcp/struct.OwnedReadHalf.html\" title=\"struct tokio::net::tcp::OwnedReadHalf\">OwnedReadHalf</a>","synthetic":false,"types":["tokio::net::tcp::split_owned::OwnedReadHalf"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"tokio/net/struct.TcpStream.html\" title=\"struct tokio::net::TcpStream\">TcpStream</a>&gt; for <a class=\"struct\" href=\"tokio/net/tcp/struct.OwnedWriteHalf.html\" title=\"struct tokio::net::tcp::OwnedWriteHalf\">OwnedWriteHalf</a>","synthetic":false,"types":["tokio::net::tcp::split_owned::OwnedWriteHalf"]}];
implementors["tokio_io"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt;&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"tokio_io/io/struct.Window.html\" title=\"struct tokio_io::io::Window\">Window</a>&lt;T&gt;","synthetic":false,"types":["tokio_io::window::Window"]}];
implementors["tracing_core"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"tracing_core/field/struct.Field.html\" title=\"struct tracing_core::field::Field\">Field</a>","synthetic":false,"types":["tracing_core::field::Field"]}];
implementors["unicase"] = [{"text":"impl&lt;S:&nbsp;<a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;str&gt;&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;str&gt; for <a class=\"struct\" href=\"unicase/struct.Ascii.html\" title=\"struct unicase::Ascii\">Ascii</a>&lt;S&gt;","synthetic":false,"types":["unicase::Ascii"]},{"text":"impl&lt;S:&nbsp;<a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;str&gt;&gt; <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;str&gt; for <a class=\"struct\" href=\"unicase/struct.UniCase.html\" title=\"struct unicase::UniCase\">UniCase</a>&lt;S&gt;","synthetic":false,"types":["unicase::UniCase"]}];
implementors["url"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>","synthetic":false,"types":["url::Url"]}];
implementors["warp"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"struct\" href=\"warp/filters/fs/struct.ArcPath.html\" title=\"struct warp::filters::fs::ArcPath\">ArcPath</a>","synthetic":false,"types":["warp::filters::fs::ArcPath"]}];
implementors["x11"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XAnyEvent.html\" title=\"struct x11::xlib::XAnyEvent\">XAnyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XButtonEvent.html\" title=\"struct x11::xlib::XButtonEvent\">XButtonEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XCirculateEvent.html\" title=\"struct x11::xlib::XCirculateEvent\">XCirculateEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XCirculateRequestEvent.html\" title=\"struct x11::xlib::XCirculateRequestEvent\">XCirculateRequestEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XClientMessageEvent.html\" title=\"struct x11::xlib::XClientMessageEvent\">XClientMessageEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XColormapEvent.html\" title=\"struct x11::xlib::XColormapEvent\">XColormapEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XConfigureEvent.html\" title=\"struct x11::xlib::XConfigureEvent\">XConfigureEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XConfigureRequestEvent.html\" title=\"struct x11::xlib::XConfigureRequestEvent\">XConfigureRequestEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XCreateWindowEvent.html\" title=\"struct x11::xlib::XCreateWindowEvent\">XCreateWindowEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XCrossingEvent.html\" title=\"struct x11::xlib::XCrossingEvent\">XCrossingEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XDestroyWindowEvent.html\" title=\"struct x11::xlib::XDestroyWindowEvent\">XDestroyWindowEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XErrorEvent.html\" title=\"struct x11::xlib::XErrorEvent\">XErrorEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XExposeEvent.html\" title=\"struct x11::xlib::XExposeEvent\">XExposeEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XFocusChangeEvent.html\" title=\"struct x11::xlib::XFocusChangeEvent\">XFocusChangeEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XGenericEventCookie.html\" title=\"struct x11::xlib::XGenericEventCookie\">XGenericEventCookie</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XGraphicsExposeEvent.html\" title=\"struct x11::xlib::XGraphicsExposeEvent\">XGraphicsExposeEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XGravityEvent.html\" title=\"struct x11::xlib::XGravityEvent\">XGravityEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XKeyEvent.html\" title=\"struct x11::xlib::XKeyEvent\">XKeyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XKeymapEvent.html\" title=\"struct x11::xlib::XKeymapEvent\">XKeymapEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XMapEvent.html\" title=\"struct x11::xlib::XMapEvent\">XMapEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XMappingEvent.html\" title=\"struct x11::xlib::XMappingEvent\">XMappingEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XMapRequestEvent.html\" title=\"struct x11::xlib::XMapRequestEvent\">XMapRequestEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XMotionEvent.html\" title=\"struct x11::xlib::XMotionEvent\">XMotionEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XNoExposeEvent.html\" title=\"struct x11::xlib::XNoExposeEvent\">XNoExposeEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XPropertyEvent.html\" title=\"struct x11::xlib::XPropertyEvent\">XPropertyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XReparentEvent.html\" title=\"struct x11::xlib::XReparentEvent\">XReparentEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XResizeRequestEvent.html\" title=\"struct x11::xlib::XResizeRequestEvent\">XResizeRequestEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XSelectionClearEvent.html\" title=\"struct x11::xlib::XSelectionClearEvent\">XSelectionClearEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XSelectionEvent.html\" title=\"struct x11::xlib::XSelectionEvent\">XSelectionEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XSelectionRequestEvent.html\" title=\"struct x11::xlib::XSelectionRequestEvent\">XSelectionRequestEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XUnmapEvent.html\" title=\"struct x11::xlib::XUnmapEvent\">XUnmapEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xlib/struct.XVisibilityEvent.html\" title=\"struct x11::xlib::XVisibilityEvent\">XVisibilityEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.i8.html\">i8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11/xlib/struct.ClientMessageData.html\" title=\"struct x11::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11/xlib/struct.ClientMessageData.html\" title=\"struct x11::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.i16.html\">i16</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11/xlib/struct.ClientMessageData.html\" title=\"struct x11::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u16.html\">u16</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11/xlib/struct.ClientMessageData.html\" title=\"struct x11::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.i64.html\">i64</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11/xlib/struct.ClientMessageData.html\" title=\"struct x11::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u64.html\">u64</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11/xlib/struct.ClientMessageData.html\" title=\"struct x11::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xf86vmode/struct.XF86VidModeNotifyEvent.html\" title=\"struct x11::xf86vmode::XF86VidModeNotifyEvent\">XF86VidModeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xrandr/struct.XRRScreenChangeNotifyEvent.html\" title=\"struct x11::xrandr::XRRScreenChangeNotifyEvent\">XRRScreenChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xrandr/struct.XRRNotifyEvent.html\" title=\"struct x11::xrandr::XRRNotifyEvent\">XRRNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xrandr/struct.XRROutputChangeNotifyEvent.html\" title=\"struct x11::xrandr::XRROutputChangeNotifyEvent\">XRROutputChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html\" title=\"struct x11::xrandr::XRRCrtcChangeNotifyEvent\">XRRCrtcChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xrandr/struct.XRROutputPropertyNotifyEvent.html\" title=\"struct x11::xrandr::XRROutputPropertyNotifyEvent\">XRROutputPropertyNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xrandr/struct.XRRProviderChangeNotifyEvent.html\" title=\"struct x11::xrandr::XRRProviderChangeNotifyEvent\">XRRProviderChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html\" title=\"struct x11::xrandr::XRRProviderPropertyNotifyEvent\">XRRProviderPropertyNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xrandr/struct.XRRResourceChangeNotifyEvent.html\" title=\"struct x11::xrandr::XRRResourceChangeNotifyEvent\">XRRResourceChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11/xss/struct.XScreenSaverNotifyEvent.html\" title=\"struct x11::xss::XScreenSaverNotifyEvent\">XScreenSaverNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11/xlib/union.XEvent.html\" title=\"union x11::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11::xlib::XEvent"]}];
implementors["x11_dl"] = [{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XAnyEvent.html\" title=\"struct x11_dl::xlib::XAnyEvent\">XAnyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XButtonEvent.html\" title=\"struct x11_dl::xlib::XButtonEvent\">XButtonEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XCirculateEvent.html\" title=\"struct x11_dl::xlib::XCirculateEvent\">XCirculateEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XCirculateRequestEvent.html\" title=\"struct x11_dl::xlib::XCirculateRequestEvent\">XCirculateRequestEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XClientMessageEvent.html\" title=\"struct x11_dl::xlib::XClientMessageEvent\">XClientMessageEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XColormapEvent.html\" title=\"struct x11_dl::xlib::XColormapEvent\">XColormapEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XConfigureEvent.html\" title=\"struct x11_dl::xlib::XConfigureEvent\">XConfigureEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XConfigureRequestEvent.html\" title=\"struct x11_dl::xlib::XConfigureRequestEvent\">XConfigureRequestEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XCreateWindowEvent.html\" title=\"struct x11_dl::xlib::XCreateWindowEvent\">XCreateWindowEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XCrossingEvent.html\" title=\"struct x11_dl::xlib::XCrossingEvent\">XCrossingEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XDestroyWindowEvent.html\" title=\"struct x11_dl::xlib::XDestroyWindowEvent\">XDestroyWindowEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XErrorEvent.html\" title=\"struct x11_dl::xlib::XErrorEvent\">XErrorEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XExposeEvent.html\" title=\"struct x11_dl::xlib::XExposeEvent\">XExposeEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XFocusChangeEvent.html\" title=\"struct x11_dl::xlib::XFocusChangeEvent\">XFocusChangeEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XGenericEventCookie.html\" title=\"struct x11_dl::xlib::XGenericEventCookie\">XGenericEventCookie</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XGraphicsExposeEvent.html\" title=\"struct x11_dl::xlib::XGraphicsExposeEvent\">XGraphicsExposeEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XGravityEvent.html\" title=\"struct x11_dl::xlib::XGravityEvent\">XGravityEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XKeyEvent.html\" title=\"struct x11_dl::xlib::XKeyEvent\">XKeyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XKeymapEvent.html\" title=\"struct x11_dl::xlib::XKeymapEvent\">XKeymapEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XMapEvent.html\" title=\"struct x11_dl::xlib::XMapEvent\">XMapEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XMappingEvent.html\" title=\"struct x11_dl::xlib::XMappingEvent\">XMappingEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XMapRequestEvent.html\" title=\"struct x11_dl::xlib::XMapRequestEvent\">XMapRequestEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XMotionEvent.html\" title=\"struct x11_dl::xlib::XMotionEvent\">XMotionEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XNoExposeEvent.html\" title=\"struct x11_dl::xlib::XNoExposeEvent\">XNoExposeEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XPropertyEvent.html\" title=\"struct x11_dl::xlib::XPropertyEvent\">XPropertyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XReparentEvent.html\" title=\"struct x11_dl::xlib::XReparentEvent\">XReparentEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XResizeRequestEvent.html\" title=\"struct x11_dl::xlib::XResizeRequestEvent\">XResizeRequestEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XSelectionClearEvent.html\" title=\"struct x11_dl::xlib::XSelectionClearEvent\">XSelectionClearEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XSelectionEvent.html\" title=\"struct x11_dl::xlib::XSelectionEvent\">XSelectionEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XSelectionRequestEvent.html\" title=\"struct x11_dl::xlib::XSelectionRequestEvent\">XSelectionRequestEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XUnmapEvent.html\" title=\"struct x11_dl::xlib::XUnmapEvent\">XUnmapEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xlib/struct.XVisibilityEvent.html\" title=\"struct x11_dl::xlib::XVisibilityEvent\">XVisibilityEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.i8.html\">i8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11_dl/xlib/struct.ClientMessageData.html\" title=\"struct x11_dl::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11_dl::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11_dl/xlib/struct.ClientMessageData.html\" title=\"struct x11_dl::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11_dl::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.i16.html\">i16</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11_dl/xlib/struct.ClientMessageData.html\" title=\"struct x11_dl::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11_dl::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u16.html\">u16</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11_dl/xlib/struct.ClientMessageData.html\" title=\"struct x11_dl::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11_dl::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.i64.html\">i64</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11_dl/xlib/struct.ClientMessageData.html\" title=\"struct x11_dl::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11_dl::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u64.html\">u64</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"x11_dl/xlib/struct.ClientMessageData.html\" title=\"struct x11_dl::xlib::ClientMessageData\">ClientMessageData</a>","synthetic":false,"types":["x11_dl::xlib::ClientMessageData"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xf86vmode/struct.XF86VidModeNotifyEvent.html\" title=\"struct x11_dl::xf86vmode::XF86VidModeNotifyEvent\">XF86VidModeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xss/struct.XScreenSaverNotifyEvent.html\" title=\"struct x11_dl::xss::XScreenSaverNotifyEvent\">XScreenSaverNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xrandr/struct.XRRScreenChangeNotifyEvent.html\" title=\"struct x11_dl::xrandr::XRRScreenChangeNotifyEvent\">XRRScreenChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xrandr/struct.XRRNotifyEvent.html\" title=\"struct x11_dl::xrandr::XRRNotifyEvent\">XRRNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xrandr/struct.XRROutputChangeNotifyEvent.html\" title=\"struct x11_dl::xrandr::XRROutputChangeNotifyEvent\">XRROutputChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xrandr/struct.XRRCrtcChangeNotifyEvent.html\" title=\"struct x11_dl::xrandr::XRRCrtcChangeNotifyEvent\">XRRCrtcChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xrandr/struct.XRROutputPropertyNotifyEvent.html\" title=\"struct x11_dl::xrandr::XRROutputPropertyNotifyEvent\">XRROutputPropertyNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xrandr/struct.XRRProviderChangeNotifyEvent.html\" title=\"struct x11_dl::xrandr::XRRProviderChangeNotifyEvent\">XRRProviderChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xrandr/struct.XRRProviderPropertyNotifyEvent.html\" title=\"struct x11_dl::xrandr::XRRProviderPropertyNotifyEvent\">XRRProviderPropertyNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]},{"text":"impl <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"x11_dl/xrandr/struct.XRRResourceChangeNotifyEvent.html\" title=\"struct x11_dl::xrandr::XRRResourceChangeNotifyEvent\">XRRResourceChangeNotifyEvent</a>&gt; for <a class=\"union\" href=\"x11_dl/xlib/union.XEvent.html\" title=\"union x11_dl::xlib::XEvent\">XEvent</a>","synthetic":false,"types":["x11_dl::xlib::XEvent"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()